// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartEscola.Data;

namespace SmartEscola.Migrations
{
    [DbContext(typeof(SmartContext))]
    [Migration("20210114000507_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0");

            modelBuilder.Entity("SmartEscola.Models.Aluno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Ativo")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("TEXT");

                    b.Property<int>("Matricula")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<string>("Sobrenome")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("dataFim")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("dataInicio")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Alunos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ativo = true,
                            DataNascimento = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Matricula = 1,
                            Nome = "Marta",
                            Sobrenome = "Kent",
                            Telefone = "11111111",
                            dataInicio = new DateTime(2021, 1, 13, 21, 5, 7, 129, DateTimeKind.Local).AddTicks(535)
                        },
                        new
                        {
                            Id = 2,
                            Ativo = true,
                            DataNascimento = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Matricula = 2,
                            Nome = "Marta",
                            Sobrenome = "Kent",
                            Telefone = "11111111",
                            dataInicio = new DateTime(2021, 1, 13, 21, 5, 7, 129, DateTimeKind.Local).AddTicks(3683)
                        },
                        new
                        {
                            Id = 3,
                            Ativo = true,
                            DataNascimento = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Matricula = 3,
                            Nome = "Marta",
                            Sobrenome = "Kent",
                            Telefone = "11111111",
                            dataInicio = new DateTime(2021, 1, 13, 21, 5, 7, 129, DateTimeKind.Local).AddTicks(3741)
                        },
                        new
                        {
                            Id = 4,
                            Ativo = true,
                            DataNascimento = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Matricula = 4,
                            Nome = "Marta",
                            Sobrenome = "Kent",
                            Telefone = "11111111",
                            dataInicio = new DateTime(2021, 1, 13, 21, 5, 7, 129, DateTimeKind.Local).AddTicks(3746)
                        },
                        new
                        {
                            Id = 5,
                            Ativo = true,
                            DataNascimento = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Matricula = 5,
                            Nome = "Marta",
                            Sobrenome = "Kent",
                            Telefone = "11111111",
                            dataInicio = new DateTime(2021, 1, 13, 21, 5, 7, 129, DateTimeKind.Local).AddTicks(3751)
                        },
                        new
                        {
                            Id = 6,
                            Ativo = true,
                            DataNascimento = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Matricula = 6,
                            Nome = "Marta",
                            Sobrenome = "Kent",
                            Telefone = "11111111",
                            dataInicio = new DateTime(2021, 1, 13, 21, 5, 7, 129, DateTimeKind.Local).AddTicks(3761)
                        },
                        new
                        {
                            Id = 7,
                            Ativo = true,
                            DataNascimento = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Matricula = 7,
                            Nome = "Marta",
                            Sobrenome = "Kent",
                            Telefone = "11111111",
                            dataInicio = new DateTime(2021, 1, 13, 21, 5, 7, 129, DateTimeKind.Local).AddTicks(3765)
                        });
                });

            modelBuilder.Entity("SmartEscola.Models.AlunoCurso", b =>
                {
                    b.Property<int>("AlunoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CursoId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Nota")
                        .HasColumnType("INTEGER");

                    b.HasKey("AlunoId", "CursoId");

                    b.HasIndex("CursoId");

                    b.ToTable("AlunosCursos");
                });

            modelBuilder.Entity("SmartEscola.Models.AlunoDisciplina", b =>
                {
                    b.Property<int>("AlunoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DisciplinaId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Nota")
                        .HasColumnType("INTEGER");

                    b.HasKey("AlunoId", "DisciplinaId");

                    b.HasIndex("DisciplinaId");

                    b.ToTable("AlunosDisciplinas");

                    b.HasData(
                        new
                        {
                            AlunoId = 1,
                            DisciplinaId = 2,
                            DataInicio = new DateTime(2021, 1, 13, 21, 5, 7, 129, DateTimeKind.Local).AddTicks(5249)
                        },
                        new
                        {
                            AlunoId = 1,
                            DisciplinaId = 4,
                            DataInicio = new DateTime(2021, 1, 13, 21, 5, 7, 129, DateTimeKind.Local).AddTicks(6169)
                        },
                        new
                        {
                            AlunoId = 1,
                            DisciplinaId = 5,
                            DataInicio = new DateTime(2021, 1, 13, 21, 5, 7, 129, DateTimeKind.Local).AddTicks(6203)
                        },
                        new
                        {
                            AlunoId = 2,
                            DisciplinaId = 1,
                            DataInicio = new DateTime(2021, 1, 13, 21, 5, 7, 129, DateTimeKind.Local).AddTicks(6205)
                        },
                        new
                        {
                            AlunoId = 2,
                            DisciplinaId = 2,
                            DataInicio = new DateTime(2021, 1, 13, 21, 5, 7, 129, DateTimeKind.Local).AddTicks(6206)
                        },
                        new
                        {
                            AlunoId = 2,
                            DisciplinaId = 5,
                            DataInicio = new DateTime(2021, 1, 13, 21, 5, 7, 129, DateTimeKind.Local).AddTicks(6210)
                        },
                        new
                        {
                            AlunoId = 3,
                            DisciplinaId = 1,
                            DataInicio = new DateTime(2021, 1, 13, 21, 5, 7, 129, DateTimeKind.Local).AddTicks(6212)
                        },
                        new
                        {
                            AlunoId = 3,
                            DisciplinaId = 2,
                            DataInicio = new DateTime(2021, 1, 13, 21, 5, 7, 129, DateTimeKind.Local).AddTicks(6213)
                        },
                        new
                        {
                            AlunoId = 3,
                            DisciplinaId = 3,
                            DataInicio = new DateTime(2021, 1, 13, 21, 5, 7, 129, DateTimeKind.Local).AddTicks(6214)
                        },
                        new
                        {
                            AlunoId = 4,
                            DisciplinaId = 1,
                            DataInicio = new DateTime(2021, 1, 13, 21, 5, 7, 129, DateTimeKind.Local).AddTicks(6217)
                        },
                        new
                        {
                            AlunoId = 4,
                            DisciplinaId = 4,
                            DataInicio = new DateTime(2021, 1, 13, 21, 5, 7, 129, DateTimeKind.Local).AddTicks(6218)
                        },
                        new
                        {
                            AlunoId = 4,
                            DisciplinaId = 5,
                            DataInicio = new DateTime(2021, 1, 13, 21, 5, 7, 129, DateTimeKind.Local).AddTicks(6220)
                        },
                        new
                        {
                            AlunoId = 5,
                            DisciplinaId = 2,
                            DataInicio = new DateTime(2021, 1, 13, 21, 5, 7, 129, DateTimeKind.Local).AddTicks(6221)
                        },
                        new
                        {
                            AlunoId = 5,
                            DisciplinaId = 4,
                            DataInicio = new DateTime(2021, 1, 13, 21, 5, 7, 129, DateTimeKind.Local).AddTicks(6222)
                        },
                        new
                        {
                            AlunoId = 5,
                            DisciplinaId = 5,
                            DataInicio = new DateTime(2021, 1, 13, 21, 5, 7, 129, DateTimeKind.Local).AddTicks(6223)
                        },
                        new
                        {
                            AlunoId = 6,
                            DisciplinaId = 2,
                            DataInicio = new DateTime(2021, 1, 13, 21, 5, 7, 129, DateTimeKind.Local).AddTicks(6224)
                        },
                        new
                        {
                            AlunoId = 6,
                            DisciplinaId = 3,
                            DataInicio = new DateTime(2021, 1, 13, 21, 5, 7, 129, DateTimeKind.Local).AddTicks(6226)
                        },
                        new
                        {
                            AlunoId = 6,
                            DisciplinaId = 4,
                            DataInicio = new DateTime(2021, 1, 13, 21, 5, 7, 129, DateTimeKind.Local).AddTicks(6228)
                        },
                        new
                        {
                            AlunoId = 7,
                            DisciplinaId = 3,
                            DataInicio = new DateTime(2021, 1, 13, 21, 5, 7, 129, DateTimeKind.Local).AddTicks(6229)
                        },
                        new
                        {
                            AlunoId = 7,
                            DisciplinaId = 4,
                            DataInicio = new DateTime(2021, 1, 13, 21, 5, 7, 129, DateTimeKind.Local).AddTicks(6231)
                        },
                        new
                        {
                            AlunoId = 7,
                            DisciplinaId = 5,
                            DataInicio = new DateTime(2021, 1, 13, 21, 5, 7, 129, DateTimeKind.Local).AddTicks(6286)
                        });
                });

            modelBuilder.Entity("SmartEscola.Models.Curso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Cursos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Tecnologia da Informaçao"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Sistemas da Informaçao"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Ciencia da Informaçao"
                        });
                });

            modelBuilder.Entity("SmartEscola.Models.Disciplina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CargaHoraria")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CursoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<int?>("PreRequisitoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProfessorId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.HasIndex("PreRequisitoId");

                    b.HasIndex("ProfessorId");

                    b.ToTable("Disciplinas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CargaHoraria = 0,
                            CursoId = 1,
                            Nome = "Matematica",
                            ProfessorId = 1
                        },
                        new
                        {
                            Id = 2,
                            CargaHoraria = 0,
                            CursoId = 3,
                            Nome = "Matematica",
                            ProfessorId = 1
                        },
                        new
                        {
                            Id = 3,
                            CargaHoraria = 0,
                            CursoId = 3,
                            Nome = "Fisica",
                            ProfessorId = 2
                        },
                        new
                        {
                            Id = 4,
                            CargaHoraria = 0,
                            CursoId = 1,
                            Nome = "Portugues",
                            ProfessorId = 3
                        },
                        new
                        {
                            Id = 5,
                            CargaHoraria = 0,
                            CursoId = 1,
                            Nome = "Ingles",
                            ProfessorId = 4
                        },
                        new
                        {
                            Id = 6,
                            CargaHoraria = 0,
                            CursoId = 2,
                            Nome = "Ingles",
                            ProfessorId = 4
                        },
                        new
                        {
                            Id = 7,
                            CargaHoraria = 0,
                            CursoId = 3,
                            Nome = "Ingles",
                            ProfessorId = 4
                        },
                        new
                        {
                            Id = 8,
                            CargaHoraria = 0,
                            CursoId = 1,
                            Nome = "Programação",
                            ProfessorId = 5
                        },
                        new
                        {
                            Id = 9,
                            CargaHoraria = 0,
                            CursoId = 2,
                            Nome = "Programação",
                            ProfessorId = 5
                        },
                        new
                        {
                            Id = 10,
                            CargaHoraria = 0,
                            CursoId = 3,
                            Nome = "Programação",
                            ProfessorId = 5
                        });
                });

            modelBuilder.Entity("SmartEscola.Models.Professor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Ativo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<int>("Registro")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Sobrenome")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("dataFim")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("dataInicio")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Professores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ativo = true,
                            Nome = "Lauro",
                            Registro = 1,
                            Sobrenome = "Olivira",
                            dataInicio = new DateTime(2021, 1, 13, 21, 5, 7, 120, DateTimeKind.Local).AddTicks(5269)
                        },
                        new
                        {
                            Id = 2,
                            Ativo = true,
                            Nome = "Roberto",
                            Registro = 2,
                            Sobrenome = "Soares",
                            dataInicio = new DateTime(2021, 1, 13, 21, 5, 7, 121, DateTimeKind.Local).AddTicks(6979)
                        },
                        new
                        {
                            Id = 3,
                            Ativo = true,
                            Nome = "Ronaldo",
                            Registro = 3,
                            Sobrenome = "Marconi",
                            dataInicio = new DateTime(2021, 1, 13, 21, 5, 7, 121, DateTimeKind.Local).AddTicks(7025)
                        },
                        new
                        {
                            Id = 4,
                            Ativo = true,
                            Nome = "Rodrigo",
                            Registro = 4,
                            Sobrenome = "Carvalho",
                            dataInicio = new DateTime(2021, 1, 13, 21, 5, 7, 121, DateTimeKind.Local).AddTicks(7027)
                        },
                        new
                        {
                            Id = 5,
                            Ativo = true,
                            Nome = "Lauro",
                            Registro = 5,
                            Sobrenome = "Olivira",
                            dataInicio = new DateTime(2021, 1, 13, 21, 5, 7, 121, DateTimeKind.Local).AddTicks(7029)
                        });
                });

            modelBuilder.Entity("SmartEscola.Models.AlunoCurso", b =>
                {
                    b.HasOne("SmartEscola.Models.Aluno", "Aluno")
                        .WithMany()
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartEscola.Models.Curso", "Curso")
                        .WithMany()
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartEscola.Models.AlunoDisciplina", b =>
                {
                    b.HasOne("SmartEscola.Models.Aluno", "Aluno")
                        .WithMany("AlunoDisciplinas")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartEscola.Models.Disciplina", "Disciplina")
                        .WithMany("AlunoDisciplinas")
                        .HasForeignKey("DisciplinaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartEscola.Models.Disciplina", b =>
                {
                    b.HasOne("SmartEscola.Models.Curso", "Curso")
                        .WithMany("Disciplinas")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartEscola.Models.Disciplina", "PreRequisito")
                        .WithMany()
                        .HasForeignKey("PreRequisitoId");

                    b.HasOne("SmartEscola.Models.Professor", "Professor")
                        .WithMany("Disciplinas")
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
